package bob.com.level;

import bob.com.player.Player;
import bob.com.tiles.Tile;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.badlogic.gdx.math.Rectangle;

public class WorldRenderer {

	private World world;
	private OrthographicCamera cam;
    private SpriteBatch spriteBatch;
    private Texture tileTexture;
	public OrthographicCamera getCam() {
		return cam;
	}

	public void setCam(OrthographicCamera cam) {
		this.cam = cam;
	}

	/** for debug rendering **/
	ShapeRenderer debugRenderer = new ShapeRenderer();

	public WorldRenderer(World world) {
		this.world = world;
		this.cam = new OrthographicCamera(10, 7);
		this.cam.position.set(5, 3.5f, 0);
		this.cam.update();
        spriteBatch = new SpriteBatch();
        loadTextures();
	}
	private void loadTextures() {
		tileTexture = new Texture(Gdx.files.internal("images/block.png"));
	}
	private void drawBlocks() {
		for (Tile block : world.getBlocks()) {
			spriteBatch.draw(tileTexture,block.getPosition().x,block.getPosition().y,
					block.getBounds().width,block.getBounds().height,2,2,2,2,false,false);
		}
	}
	public void render() {
		spriteBatch.begin();
			drawdebug();
			Gdx.app.log("banaan", Integer.toString(world.getTiles().size));
		spriteBatch.end();
	}
	
	public void drawdebug() {
		debugRenderer.setProjectionMatrix(cam.combined);
		debugRenderer.begin(ShapeType.Filled);
		for (Tile block : world.getTiles()) {
			Rectangle rect = block.getBounds();
			debugRenderer.setColor(new Color(1, 0, 0, 1));
			debugRenderer.rect(rect.x, rect.y, rect.width, rect.height);
		}
		// render Bob
		Player bob = world.getPlayer();
		Rectangle rect = bob.getBounds();
		debugRenderer.setColor(new Color(0, 1, 0, 1));
		debugRenderer.rect(rect.x, rect.y, rect.width, rect.height);
		debugRenderer.end();
	}
}
