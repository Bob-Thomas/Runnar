package net.obviam.starassault.model;

import bob.com.tiles.Tile;

import com.badlogic.gdx.math.Vector2;

public class Level {

	private int width;
	private int height;
	private Block[][] blocks;

	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getHeight() {
		return height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	public Block[][] getBlocks() {
		return blocks;
	}

	public void setBlocks(Block[][] blocks) {
		this.blocks = blocks;
	}

	public Level() {
		loadDemoLevel();
	}
	public void update(float delta)
	{
		random  = 1;
		if (random > 3){
			random = 0;
		}
		if( player.getPosition().x > tiles.size-6 ){
			generateRandom(random);
		}
		for(Tile tile : tiles)
		{
			tile.update(delta);
		}
	}
	private void generateRandom(int random){

		switch(random)
		{
		case 1:
			
			blocks[1][1] = new Block(new Vector2(1, 1));
			blocks[1][1] = new Block(new Vector2(1, 1));
			blocks[1][1] = new Block(new Vector2(1, 1));
			blocks[1][1] = new Block(new Vector2(1, 1));
			blocks[1][1] = new Block(new Vector2(1, 1));

			break;
		case 2:
			blocks[1][1] = new Block(new Vector2(1, 1));


			break;
		case 3:
			blocks[1][1] = new Block(new Vector2(1, 1));

			break;
		}
	}
	
	public Block get(int x, int y) {
		return blocks[x][y];
	}

	private void loadDemoLevel() {
		width = 10;
		height = 7;
		blocks = new Block[width][height];
		for (int col = 0; col < width; col++) {
			for (int row = 0; row < height; row++) {
				blocks[col][row] = null;
			}
		}
		blocks[1][1] = new Block(new Vector2(1, 1));
		blocks[2][1] = new Block(new Vector2(2, 1));
		blocks[3][1] = new Block(new Vector2(3, 1));
		blocks[4][1] = new Block(new Vector2(4, 1));

		blocks[5][1] = new Block(new Vector2(5, 1));
		blocks[6][1] = new Block(new Vector2(6, 1));
		blocks[7][1] = new Block(new Vector2(7, 1));
	}
}
